apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: influxdb-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1beta2 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: influxdb
spec:
  selector:
    matchLabels:
      app: influxdb-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: influxdb-app
    spec:
      containers:
      - image: library/influxdb
        name: influxdb-container
        ports:
        - containerPort: 8086
          name: api-port
        - containerPort: 8083
          name: ui-port
        volumeMounts:
        - name: influxdb-persistent-storage
          mountPath: /var/lib/influxdb
      volumes:
      - name: influxdb-persistent-storage
        persistentVolumeClaim:
          claimName: influxdb-pv-claim
---
kind: Service
apiVersion: v1
metadata:
  name: influxdb-external-service
spec:
  selector:
    app: influxdb-app
  ports:
  - port: 8086
    protocol: TCP
    name: api-port
  - port: 8083
    protocol: TCP
    name: ui-port
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-service
spec:
  selector:
    app: influxdb-app
  ports:
  - port: 8086
    protocol: TCP
    name: api-port
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pv-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1beta2 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana-app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: grafana-app
    spec:
      containers:
      - image: grafana/grafana
        name: grafana-container
        securityContext:
          runAsUser: 0
        ports:
        - containerPort: 3000
          name: ui-port
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
        env:
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Viewer"
        - name: GF_SERVER_DOMAIN
          value: "covid19.cpollet.net"
        - name: GF_SERVER_ROOT_URL
          value: "http://covid19.cpollet.net"
        - name: GF_ANALYTICS_GOOGLE_ANALYTICS_UA_ID
          value: "UA-178471039-1"
      volumes:
      - name: grafana-persistent-storage
        persistentVolumeClaim:
          claimName: grafana-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  selector:
    app: grafana-app
  ports:
  - port: 3000
    protocol: TCP
    name: ui-port
  type: NodePort
---
apiVersion: networking.gke.io/v1beta1
kind: ManagedCertificate
metadata:
  name: covid19-cpollet-net
spec:
  domains:
    - covid19.cpollet.net
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: grafana-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: grafana-ingress
    networking.gke.io/managed-certificates: covid19-cpollet-net
    kubernetes.io/ingress.allow-http: "false"
spec:
  rules:
  - host: covid19.cpollet.net
    http:
      paths:
      - path: /*
        backend:
          serviceName: grafana-service
          servicePort: 3000
